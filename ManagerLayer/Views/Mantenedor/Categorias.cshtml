
@{
    ViewBag.Title = "Categorias";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb mb-4 mt-3">
    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Resumen</a></li>
    <li class="breadcrumb-item active">Categorías</li>
</ol>

<div class="card mt-0">
    <div class="card-header">
        <i class="fas fa-book me-1"></i> <b>Categorías</b>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="openModal(null)">Crear Categoría</button>
            </div>
        </div>
        <hr />
        <table id="tabla" class="display cell-border" style="width:100%">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Activo</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col-6">
            <div id="toast" class="toast align-items-end text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        Hello, world! This is a toast message.
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="formModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Categoría</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="idCategoria" type="text" value="0" /> @*Si el valor es 0, la categoría es nueva*@
                <div class="row  g-2">
                    <div class="col-sm-6">
                        <label for="nameInput" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nameInput">
                    </div>
                    <div class="col-sm-6">
                        <label for="lastNamesInput" class="form-label">Descripción</label>
                        <input type="text" class="form-control" id="descriptionInput">
                    </div>
                    <div class="col-sm-6 mt-1">
                        <label for="estadoSelect" class="form-label">Estado de la categoría</label>
                        <select id="estadoSelect" class="form-select">
                            <option selected>Selecciona una opción</option>
                            <option value="1">Activa</option>
                            <option value="0">Inactiva</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row mt-2">
                <div class="col-12">
                    <div id="MensajeError" class="alert alert-danger" role="alert">
                        A simple dark alert—check it out!
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-warning btn-sm" data-bs-dismiss="modal">Cerrar</button>

                <button type="button" class="btn btn-primary btn-sm" id="btnGuardar" onclick="GuardarCategoria()">
                    <span id="spinner" class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true" style="display:none;"></span>
                    <span id="btnText">Guardar</span>
                </button>


            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        var tabladata;

        jQuery.ajax({
            url: '@Url.Action("GetCategorias","Mantenedor")',
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log(data)
            }
        })

        tabladata = $("#tabla").DataTable({
            responsive: true,
            ordering: false,
            "ajax": {
                url: '@Url.Action("GetCategorias","Mantenedor")',
                type: 'GET',
                dataType: 'json'
            },
            "columns": [
                { "data": "nombre" },
                { "data": "descripcion" },
                {
                    "data": "activo", "render": function (valor) {
                        if (valor) {
                            return '<span class="badge rounded-pill bg-success">Sí</span>'
                        } else {
                            return '<span class="badge rounded-pill bg-danger">No</span>'
                        }
                    }
                },
                {
                    "defaultContent": "<button class='btn btn-warning btn-sm btn-editar'><i class='fas fa-pen'></i></button> <button class='btn btn-danger btn-sm btn-eliminar'><i class='fas fa-trash'></i></button>",
                    "orderable": false,
                    "searchable": false,
                    "width": "55px"
                }
            ]
        });

        function openModal(data) {

            $("#idCategoria").val(0);
            $("#nameInput").val("");
            $("#descriptionInput").val("");
            $("#estadoSelect").val(1);
            $("#MensajeError").hide();

            if (data != null) {
                $("#idCategoria").val(data.idCategoria);
                $("#nameInput").val(data.nombre);
                $("#descriptionInput").val(data.descripcion);
               
                $("#estadoSelect").val(data.activo == true ? 1 : 0);

            }

            $('#formModal').modal('show');
        }

        $("#tabla tbody").on("click", ".btn-editar", function () {

            var filaSeleccionada = $(this).closest('tr');
            var data = tabladata.row(filaSeleccionada).data();
            openModal(data);

        });

        $("#tabla tbody").on("click", ".btn-eliminar", function () {

            var categoriaSeleccionada = $(this).closest('tr');
            var data = tabladata.row(categoriaSeleccionada).data();
            console.log(data);

            swal({
                title: "¿Está seguro de que desea eliminar la categoría? 😳",
                text: "Ésta será eliminada de forma permanente",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Sí!, Eliminar",
                cancelButtonText: "Cancelar",
                closeOnConfirm: false
            },
                function () {

                    jQuery.ajax({
                        url: '@Url.Action("EliminarCategoria","Mantenedor")',
                        type: 'POST',
                        data: JSON.stringify({ idCategoria: data.idCategoria }),
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) { //data almacena la respuesta del controlador

                            if (data.ResultadoJson) {

                                tabladata.row(categoriaSeleccionada).remove().draw();

                            }
                            else
                            {

                                swal("No se pudo eliminar la categoría", data.MensajeJson, "error");

                            }

                        },
                        error: function (error) {

                            console.log(error)

                        }
                    });

                    swal("Eliminada!", "La categoría ha sido eliminada con éxito!", "success");
                });

        });

        function GuardarCategoria() {

            $("#btnGuardar").prop('disabled', true); // Deshabilita el botón para prevenir clicks adicionales
            $("#spinner").show();
            $("#btnText").text("Guardando...");

            var Categoria = {

                idCategoria: $("#idCategoria").val(),
                nombre: $("#nameInput").val(),
                descripcion: $("#descriptionInput").val(),
                activo: $("#estadoSelect").val() == 1 ? true : false // Convierte el valor del select a booleano que significa 0 = false (inactivo) y 1 = true (activo)

            }

            jQuery.ajax({

                url: '@Url.Action("GuardarCategoria","Mantenedor")', // Se llama al método GuardarUsuario del controlador Home
                type: 'POST',
                data: JSON.stringify({ oCategoria: Categoria }), // Se asigna el objeto Usuario al parámetro oUsuario y Se envía al controlador Home. JSON.stringify convierte el objeto a formato JSON.
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',

                success: function (data) { // Se ejecuta si la petición es exitosa. data es la respuesta del controlador (método GuardarUsuario).
                    debugger;
                    if (Categoria.idCategoria == 0) // Si el id del usuario es 0, significa que es un USUARIO NUEVO
                    {

                        if (data.ResultadoJson != 0) { // Si el id del usuario es diferente de 0, significa que el usuario se guardó correctamente

                            Categoria.idCategoria = data.ResultadoJson; // Se asigna el id del usuario que se guardó correctamente
                            tabladata.row.add(Categoria).draw(false); // Se agrega el nuevo usuario a la tabla

                            $("#formModal").modal("hide"); // Se cierra el modal
                            $("#toast .toast-body").text(data.MensajeJson);
                            $("#toast").show();
                            $("#toast").fadeOut(6000);

                        }
                        else
                        {

                         $("#MensajeError").text(data.MensajeJson);
                         $("#MensajeError").show();

                        }

                    }
                    else
                    {
                         // Se actualiza la fila seleccionada con los datos del usuario
                        $("#formModal").modal("hide");
                        $("#tabla").DataTable().ajax.reload(
                            null, false
                        );
                        $("#toast .toast-body").text(data.MensajeJson);
                        $("#toast").show();
                        $("#toast").fadeOut(6000);
                    }

                },
                error: function (error) { // Se ejecuta si la petición falla

                    console.log(error);

                },
                beforeSend: function () { // Se ejecuta antes de enviar la petición

                    console.log("Enviando datos...");

                },
                complete: function () {
                    // Siempre oculta el spinner y muestra el texto original del botón cuando la operación haya finalizado
                    $("#btnGuardar").prop('disabled', false); // Rehabilita el botón
                    $("#spinner").hide();
                    $("#btnText").text("Guardar");
                }
            });

        }

    </script>

}
